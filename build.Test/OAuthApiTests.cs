using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ININ.PureCloudApi.Client;
using ININ.PureCloudApi.Api;
using ININ.PureCloudApi.Model;

namespace ININ.PureCloudApi.Test
{
    /// <summary>
    ///  Class for testing OAuthApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class OAuthApiTests
    {
        private OAuthApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
           instance = new OAuthApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of OAuthApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            Assert.IsInstanceOf<OAuthApi> (instance, "instance is a OAuthApi");
        }

        
        /// <summary>
        /// Test DeleteClientsClientId
        /// </summary>
        [Test]
        public void DeleteClientsClientIdTest()
        {
            // TODO: add unit test for the method 'DeleteClientsClientId'
            string clientId = null; // TODO: replace null with proper value
            instance.DeleteClientsClientId(clientId);
            
        }
        
        /// <summary>
        /// Test GetClients
        /// </summary>
        [Test]
        public void GetClientsTest()
        {
            // TODO: add unit test for the method 'GetClients'
            var response = instance.GetClients();
            Assert.IsInstanceOf<OAuthClientEntityListing> (response, "response is OAuthClientEntityListing");
        }
        
        /// <summary>
        /// Test GetClientsClientId
        /// </summary>
        [Test]
        public void GetClientsClientIdTest()
        {
            // TODO: add unit test for the method 'GetClientsClientId'
            string clientId = null; // TODO: replace null with proper value
            var response = instance.GetClientsClientId(clientId);
            Assert.IsInstanceOf<OAuthClient> (response, "response is OAuthClient");
        }
        
        /// <summary>
        /// Test PostClients
        /// </summary>
        [Test]
        public void PostClientsTest()
        {
            // TODO: add unit test for the method 'PostClients'
            OAuthClient body = null; // TODO: replace null with proper value
            var response = instance.PostClients(body);
            Assert.IsInstanceOf<OAuthClient> (response, "response is OAuthClient");
        }
        
        /// <summary>
        /// Test PostClientsClientIdSecret
        /// </summary>
        [Test]
        public void PostClientsClientIdSecretTest()
        {
            // TODO: add unit test for the method 'PostClientsClientIdSecret'
            string clientId = null; // TODO: replace null with proper value
            instance.PostClientsClientIdSecret(clientId);
            
        }
        
        /// <summary>
        /// Test PutClientsClientId
        /// </summary>
        [Test]
        public void PutClientsClientIdTest()
        {
            // TODO: add unit test for the method 'PutClientsClientId'
            string clientId = null; // TODO: replace null with proper value
            OAuthClient body = null; // TODO: replace null with proper value
            var response = instance.PutClientsClientId(clientId, body);
            Assert.IsInstanceOf<OAuthClient> (response, "response is OAuthClient");
        }
        
    }

}
