using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ININ.PureCloudApi.Client;
using ININ.PureCloudApi.Api;
using ININ.PureCloudApi.Model;

namespace ININ.PureCloudApi.Test
{
    /// <summary>
    ///  Class for testing IdentityProviderApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class IdentityProviderApiTests
    {
        private IdentityProviderApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new IdentityProviderApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of IdentityProviderApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            Assert.IsInstanceOf<IdentityProviderApi> (instance, "instance is a IdentityProviderApi");
        }

        
        /// <summary>
        /// Test DeleteCic
        /// </summary>
        [Test]
        public void DeleteCicTest()
        {
            // TODO: add unit test for the method 'DeleteCic'
            instance.DeleteCic();
            
        }
        
        /// <summary>
        /// Test DeleteOkta
        /// </summary>
        [Test]
        public void DeleteOktaTest()
        {
            // TODO: add unit test for the method 'DeleteOkta'
            instance.DeleteOkta();
            
        }
        
        /// <summary>
        /// Test DeleteOnelogin
        /// </summary>
        [Test]
        public void DeleteOneloginTest()
        {
            // TODO: add unit test for the method 'DeleteOnelogin'
            instance.DeleteOnelogin();
            
        }
        
        /// <summary>
        /// Test DeleteProviderId
        /// </summary>
        [Test]
        public void DeleteProviderIdTest()
        {
            // TODO: add unit test for the method 'DeleteProviderId'
            instance.DeleteProviderId();
            
        }
        
        /// <summary>
        /// Test DeletePurecloud
        /// </summary>
        [Test]
        public void DeletePurecloudTest()
        {
            // TODO: add unit test for the method 'DeletePurecloud'
            instance.DeletePurecloud();
            
        }
        
        /// <summary>
        /// Test DeleteSalesforce
        /// </summary>
        [Test]
        public void DeleteSalesforceTest()
        {
            // TODO: add unit test for the method 'DeleteSalesforce'
            instance.DeleteSalesforce();
            
        }
        
        /// <summary>
        /// Test GetCic
        /// </summary>
        [Test]
        public void GetCicTest()
        {
            // TODO: add unit test for the method 'GetCic'
            var response = instance.GetCic();
            Assert.IsInstanceOf<CustomerInteractionCenter> (response, "response is CustomerInteractionCenter");
        }
        
        /// <summary>
        /// Test GetIdentityproviders
        /// </summary>
        [Test]
        public void GetIdentityprovidersTest()
        {
            // TODO: add unit test for the method 'GetIdentityproviders'
            var response = instance.GetIdentityproviders();
            Assert.IsInstanceOf<OAuthProviderEntityListing> (response, "response is OAuthProviderEntityListing");
        }
        
        /// <summary>
        /// Test GetOkta
        /// </summary>
        [Test]
        public void GetOktaTest()
        {
            // TODO: add unit test for the method 'GetOkta'
            var response = instance.GetOkta();
            Assert.IsInstanceOf<Okta> (response, "response is Okta");
        }
        
        /// <summary>
        /// Test GetOnelogin
        /// </summary>
        [Test]
        public void GetOneloginTest()
        {
            // TODO: add unit test for the method 'GetOnelogin'
            var response = instance.GetOnelogin();
            Assert.IsInstanceOf<OneLogin> (response, "response is OneLogin");
        }
        
        /// <summary>
        /// Test GetProviderId
        /// </summary>
        [Test]
        public void GetProviderIdTest()
        {
            // TODO: add unit test for the method 'GetProviderId'
            var response = instance.GetProviderId();
            Assert.IsInstanceOf<OAuthProvider> (response, "response is OAuthProvider");
        }
        
        /// <summary>
        /// Test GetPurecloud
        /// </summary>
        [Test]
        public void GetPurecloudTest()
        {
            // TODO: add unit test for the method 'GetPurecloud'
            var response = instance.GetPurecloud();
            Assert.IsInstanceOf<PureCloud> (response, "response is PureCloud");
        }
        
        /// <summary>
        /// Test GetSalesforce
        /// </summary>
        [Test]
        public void GetSalesforceTest()
        {
            // TODO: add unit test for the method 'GetSalesforce'
            var response = instance.GetSalesforce();
            Assert.IsInstanceOf<Salesforce> (response, "response is Salesforce");
        }
        
        /// <summary>
        /// Test PutCic
        /// </summary>
        [Test]
        public void PutCicTest()
        {
            // TODO: add unit test for the method 'PutCic'
            CustomerInteractionCenter body = null; // TODO: replace null with proper value
            instance.PutCic(body);
            
        }
        
        /// <summary>
        /// Test PutOkta
        /// </summary>
        [Test]
        public void PutOktaTest()
        {
            // TODO: add unit test for the method 'PutOkta'
            Okta body = null; // TODO: replace null with proper value
            instance.PutOkta(body);
            
        }
        
        /// <summary>
        /// Test PutOnelogin
        /// </summary>
        [Test]
        public void PutOneloginTest()
        {
            // TODO: add unit test for the method 'PutOnelogin'
            OneLogin body = null; // TODO: replace null with proper value
            instance.PutOnelogin(body);
            
        }
        
        /// <summary>
        /// Test PutProviderId
        /// </summary>
        [Test]
        public void PutProviderIdTest()
        {
            // TODO: add unit test for the method 'PutProviderId'
            OAuthProvider body = null; // TODO: replace null with proper value
            instance.PutProviderId(body);
            
        }
        
        /// <summary>
        /// Test PutPurecloud
        /// </summary>
        [Test]
        public void PutPurecloudTest()
        {
            // TODO: add unit test for the method 'PutPurecloud'
            PureCloud body = null; // TODO: replace null with proper value
            instance.PutPurecloud(body);
            
        }
        
        /// <summary>
        /// Test PutSalesforce
        /// </summary>
        [Test]
        public void PutSalesforceTest()
        {
            // TODO: add unit test for the method 'PutSalesforce'
            Salesforce body = null; // TODO: replace null with proper value
            instance.PutSalesforce(body);
            
        }
        
    }

}
