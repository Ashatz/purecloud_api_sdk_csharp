using System;
using System.IO;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Linq;
using System.Reflection;
using RestSharp;
using NUnit.Framework;

using ININ.PureCloudApi.Client;
using ININ.PureCloudApi.Api;
using ININ.PureCloudApi.Model;

namespace ININ.PureCloudApi.Test
{
    /// <summary>
    ///  Class for testing LanguagesApi
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the API endpoint.
    /// </remarks>
    [TestFixture]
    public class LanguagesApiTests
    {
        private LanguagesApi instance;

        /// <summary>
        /// Setup before each unit test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new LanguagesApi();
        }

        /// <summary>
        /// Clean up after each unit test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of LanguagesApi
        /// </summary>
        [Test]
        public void InstanceTest()
        {
            Assert.IsInstanceOf<LanguagesApi> (instance, "instance is a LanguagesApi");
        }

        
        /// <summary>
        /// Test DeleteLanguageId
        /// </summary>
        [Test]
        public void DeleteLanguageIdTest()
        {
            // TODO: add unit test for the method 'DeleteLanguageId'
            string languageId = null; // TODO: replace null with proper value
            instance.DeleteLanguageId(languageId);
            
        }
        
        /// <summary>
        /// Test DeleteLanguagesLanguageId
        /// </summary>
        [Test]
        public void DeleteLanguagesLanguageIdTest()
        {
            // TODO: add unit test for the method 'DeleteLanguagesLanguageId'
            string languageId = null; // TODO: replace null with proper value
            instance.DeleteLanguagesLanguageId(languageId);
            
        }
        
        /// <summary>
        /// Test GetLanguageId
        /// </summary>
        [Test]
        public void GetLanguageIdTest()
        {
            // TODO: add unit test for the method 'GetLanguageId'
            string languageId = null; // TODO: replace null with proper value
            var response = instance.GetLanguageId(languageId);
            Assert.IsInstanceOf<Language> (response, "response is Language");
        }
        
        /// <summary>
        /// Test GetLanguages
        /// </summary>
        [Test]
        public void GetLanguagesTest()
        {
            // TODO: add unit test for the method 'GetLanguages'
            int? pageSize = null; // TODO: replace null with proper value
            int? pageNumber = null; // TODO: replace null with proper value
            string sortOrder = null; // TODO: replace null with proper value
            string name = null; // TODO: replace null with proper value
            var response = instance.GetLanguages(pageSize, pageNumber, sortOrder, name);
            Assert.IsInstanceOf<LanguageEntityListing> (response, "response is LanguageEntityListing");
        }
        
        /// <summary>
        /// Test GetLanguagesLanguageId
        /// </summary>
        [Test]
        public void GetLanguagesLanguageIdTest()
        {
            // TODO: add unit test for the method 'GetLanguagesLanguageId'
            string languageId = null; // TODO: replace null with proper value
            var response = instance.GetLanguagesLanguageId(languageId);
            Assert.IsInstanceOf<Language> (response, "response is Language");
        }
        
        /// <summary>
        /// Test GetTranslations
        /// </summary>
        [Test]
        public void GetTranslationsTest()
        {
            // TODO: add unit test for the method 'GetTranslations'
            var response = instance.GetTranslations();
            Assert.IsInstanceOf<AvailableTranslations> (response, "response is AvailableTranslations");
        }
        
        /// <summary>
        /// Test GetTranslationsBuiltin
        /// </summary>
        [Test]
        public void GetTranslationsBuiltinTest()
        {
            // TODO: add unit test for the method 'GetTranslationsBuiltin'
            string language = null; // TODO: replace null with proper value
            var response = instance.GetTranslationsBuiltin(language);
            Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test GetTranslationsOrganization
        /// </summary>
        [Test]
        public void GetTranslationsOrganizationTest()
        {
            // TODO: add unit test for the method 'GetTranslationsOrganization'
            string language = null; // TODO: replace null with proper value
            var response = instance.GetTranslationsOrganization(language);
            Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test GetTranslationsUsersUserId
        /// </summary>
        [Test]
        public void GetTranslationsUsersUserIdTest()
        {
            // TODO: add unit test for the method 'GetTranslationsUsersUserId'
            string userId = null; // TODO: replace null with proper value
            var response = instance.GetTranslationsUsersUserId(userId);
            Assert.IsInstanceOf<Dictionary<string, Object>> (response, "response is Dictionary<string, Object>");
        }
        
        /// <summary>
        /// Test PostLanguages
        /// </summary>
        [Test]
        public void PostLanguagesTest()
        {
            // TODO: add unit test for the method 'PostLanguages'
            Language body = null; // TODO: replace null with proper value
            var response = instance.PostLanguages(body);
            Assert.IsInstanceOf<Language> (response, "response is Language");
        }
        
    }

}
