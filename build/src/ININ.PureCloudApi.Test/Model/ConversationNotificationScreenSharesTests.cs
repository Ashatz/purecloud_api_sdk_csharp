using NUnit.Framework;

using System;
using System.Linq;
using System.IO;
using System.Collections.Generic;
using ININ.PureCloudApi.Api;
using ININ.PureCloudApi.Model;
using ININ.PureCloudApi.Client;
using System.Reflection;

namespace ININ.PureCloudApi.Test
{
    /// <summary>
    ///  Class for testing ConversationNotificationScreenShares
    /// </summary>
    /// <remarks>
    /// This file is automatically generated by Swagger Codegen.
    /// Please update the test case below to test the model.
    /// </remarks>
    [TestFixture]
    public class ConversationNotificationScreenSharesTests
    {
        private ConversationNotificationScreenShares instance;

        /// <summary>
        /// Setup before each test
        /// </summary>
        [SetUp]
        public void Init()
        {
            instance = new ConversationNotificationScreenShares();
        }

        /// <summary>
        /// Clean up after each test
        /// </summary>
        [TearDown]
        public void Cleanup()
        {

        }

        /// <summary>
        /// Test an instance of ConversationNotificationScreenShares
        /// </summary>
        [Test]
        public void ConversationNotificationScreenSharesInstanceTest()
        {
            Assert.IsInstanceOf<ConversationNotificationScreenShares> (instance, "instance is a ConversationNotificationScreenShares");
        }

        /// <summary>
        /// Test the property 'State'
        /// </summary>
        [Test]
        public void StateTest()
        {
            // TODO: unit test for the property 'State'
        }
        /// <summary>
        /// Test the property 'Self'
        /// </summary>
        [Test]
        public void SelfTest()
        {
            // TODO: unit test for the property 'Self'
        }
        /// <summary>
        /// Test the property 'Id'
        /// </summary>
        [Test]
        public void IdTest()
        {
            // TODO: unit test for the property 'Id'
        }
        /// <summary>
        /// Test the property 'Context'
        /// </summary>
        [Test]
        public void ContextTest()
        {
            // TODO: unit test for the property 'Context'
        }
        /// <summary>
        /// Test the property 'Sharing'
        /// </summary>
        [Test]
        public void SharingTest()
        {
            // TODO: unit test for the property 'Sharing'
        }
        /// <summary>
        /// Test the property 'Provider'
        /// </summary>
        [Test]
        public void ProviderTest()
        {
            // TODO: unit test for the property 'Provider'
        }
        /// <summary>
        /// Test the property 'DisconnectType'
        /// </summary>
        [Test]
        public void DisconnectTypeTest()
        {
            // TODO: unit test for the property 'DisconnectType'
        }
        /// <summary>
        /// Test the property 'ConnectedTime'
        /// </summary>
        [Test]
        public void ConnectedTimeTest()
        {
            // TODO: unit test for the property 'ConnectedTime'
        }
        /// <summary>
        /// Test the property 'DisconnectedTime'
        /// </summary>
        [Test]
        public void DisconnectedTimeTest()
        {
            // TODO: unit test for the property 'DisconnectedTime'
        }
        /// <summary>
        /// Test the property 'AdditionalProperties'
        /// </summary>
        [Test]
        public void AdditionalPropertiesTest()
        {
            // TODO: unit test for the property 'AdditionalProperties'
        }

    }

}
